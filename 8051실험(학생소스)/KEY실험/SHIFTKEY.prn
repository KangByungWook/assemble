 FFFFFFFF           ; KEYPAD 실험 2 
 FFFFFFFF           ;PROGRAMMED BY KIM HYUNG SOO
 8000                     ORG     8000H 
 FFF0           DATAOUT   EQU     0FFF0H ;데이터 아웃의 주소
 FFF1           DATAIN    EQU     0FFF1H ;데이터 인의 주소
                
 FFC1           DLED      EQU     0FFC1H ;오른쪽 2개  7_SEGMENT의 주소
 FFC2           ALED0     EQU     0FFC2H ;중간 2개 7_SEGMENT의 주소
 FFC3           ALED1     EQU     0FFC3H ;왼쪽 2개 7_SEGMENT의 주소
                
                ;상수 정의 
 0005           REP_COUNT EQU     5
                
                ;변수 정의
                
 0030           VSEC      EQU     30H  ; 오른쪽 2개의 7_SEGMENT에 표시 될 값 보관
 0031           VMIN      EQU     31H  ; 중간 2개의 7_SEGMENT에 표시 될 값 보관 
 0032           VHOUR     EQU     32H  ; 왼쪽 2개의 7_SEGMENT에 표시 될 값 보관
 0033           VBUF      EQU     33H  ; 임시 보관 장소
                
 8000                     ORG     8000H
 8000 758160              MOV     SP,#60H    ; 스택 포인터의 위치를 이동
                
 8003 753280              MOV     VHOUR,#80H ; VHOUR의 초기화
 8006 753151              MOV     VMIN,#51H  ; VMIN의  초기화
 8009 753000              MOV     VSEC,#00H  ; VSEC의  초기화
 800C 1280C4              CALL    DISPLAY
                
 800F 12808D    MAIN:     CALL    FINDKEYCODE   ; 키코드 값을 읽어오는 루틴 호출
 8012 20E40D              JB      ACC.4, ERR    ; 함수 키 이면, 에러 표시
 8015 F533                MOV     VBUF, A       ; 읽어온 키 코드 값을 VBUF에 보관
 8017 12806A              CALL    SHIFT         ; 표시 이동 루틴 호출
 801A 1280C4              CALL    DISPLAY       ; 이동된 값을 표시   
 801D 128027              CALL    BOUNCE        ; 바운스 현상을 없애기 위한 루틴 호출 
 8020 80ED                JMP     MAIN          ; 반복 동작을 위한 분기
                
 8022 128036    ERR:      CALL    ERROR         ; 에러 표시 루틴 호출 
 8025 80E8                JMP     MAIN          ; 메인 루틴으로 복귀
                
 8027                     ; 눌러진 키가 떨어질 때까지 일정 시간 지연
 8027 128061    BOUNCE:   CALL    DELAY         ; 시간 지연 루틴 호출  
                
 802A 7400      RELOAD:   MOV     A,#0          ; 키가 떨어 졌는지 체크 
 802C 1280BB              CALL    SUBKEY       
 802F F4                  CPL     A
 8030 70F8                JNZ     RELOAD        ; 키가 떨어지지 않았으면, 다시 체크
                
 8032 128061              CALL    DELAY         ; 시간 지연 루틴 호출
 8035 22                  RET                   ; 상위 루틴으로 복귀 
                
 8036           ;****************************************************
 8036           ;*        서브 루틴 : ERROR                         *
 8036           ;*             입력 : 없음                          *
 8036           ;*             출력 : 7_SEGMENT                     *
 8036           ;*             기능 : REP_COUNT 에 지정된 횟수만큼  *
 8036           ;*                    끄고 켜기를 반복              *
 8036           ;****************************************************
                
 8036 7C05      ERROR:    MOV     R4,#REP_COUNT
                
 8038           ERR_1:   
 8038 753000              MOV     VSEC,#0
 803B 753100              MOV     VMIN,#0
 803E 753200              MOV     VHOUR,#0
 8041 1280C4              CALL    DISPLAY       ; 6개의 7_SEGMENT 켜기
                       
 8044 7B0A                MOV     R3,#10        
 8046 128061    FIRST:    CALL    DELAY 
 8049 DBFB                DJNZ    R3,FIRST      ; 일정 시간 지연
                
 804B 7530FF              MOV     VSEC , #0FFH
 804E 7531FF              MOV     VMIN , #0FFH
 8051 7532FF              MOV     VHOUR, #0FFH
 8054 1280C4              CALL    DISPLAY       ; 6개의 7_SEGMENT 켜기 
                
 8057 7B0A                MOV     R3,#10      
 8059 128061    SECOND:   CALL    DELAY         
 805C DBFB                DJNZ    R3,SECOND     ; 일정 시간 지연
                
 805E DCD8                DJNZ    R4,ERR_1      ; 반복 횟수 만큼 반복 했는지 체크 
 8060 22                  RET                   ; 상위 루틴으로 복귀
                          
                
 8061           ;***************************************************
 8061           ;*        서브 루틴 : DELAY                        *
 8061           ;*             입력 : 없음                         *
 8061           ;*             출력 : 없음                         *
 8061           ;*             기능 : R1*2+3 만큼의 시간 지연      *
 8061           ;***************************************************
 8061 7820      DELAY:    MOV     R0,#020H
                
 8063 79FF      REPEAT:   MOV     R1,#0FFH
 8065 D9FE                DJNZ    R1,$
 8067 D8FA                DJNZ    R0,REPEAT
 8069 22                  RET         
                      
 806A           ;***************************************************
 806A           ;*        서브 루틴 : SHIFT                        *
 806A           ;*             입력 : VBUF                         *
 806A           ;*             출력 : VSEC,VMIN,VHOUR              *
 806A           ;*             기능 : 표시된 값을 왼쪽으로 이동    *
 806A           ;*                    시키기                       *
 806A           ;***************************************************
 806A E532      SHIFT:    MOV     A,VHOUR
 806C C4                  SWAP    A           
 806D F532                MOV     VHOUR,A         
                
 806F E531                MOV     A,VMIN
 8071 C4                  SWAP    A
 8072 F531                MOV     VMIN,A          
                
 8074 E530                MOV     A,VSEC
 8076 C4                  SWAP    A
 8077 F530                MOV     VSEC,A          
                
 8079 E531                MOV     A,VMIN
 807B 7832                MOV     R0,#VHOUR
 807D D6                  XCHD    A,@R0           
 807E F531                MOV     VMIN,A
                
 8080 E530                MOV     A,VSEC
 8082 7831                MOV     R0,#VMIN
 8084 D6                  XCHD    A,@R0           
 8085 F530                MOV     VSEC,A
                
 8087 E533                MOV     A,VBUF
 8089 7830                MOV     R0,#VSEC
 808B D6                  XCHD    A,@R0        ; 새로 입력된 키 값으로 바꿈
 808C 22                  RET
                           
 808D           ;***************************************************
 808D           ;*        서브 루틴: FINDKEYCODE                   * 
 808D           ;*             입력: A                             *
 808D           ;*             출력: A                             *
 808D           ;*             기능: 키 코드값을  찾아내기         *
 808D           ;***************************************************
                
 808D           FINDKEYCODE:
 808D C0D0                 PUSH    PSW        ; 스택에 PSW값을 보관
 808F D2D4                 SETB    PSW.4      ; 뱅크3 레지스터 사용
 8091 D2D3                 SETB    PSW.3
                
 8093 7900      INITIAL:   MOV     R1,#00H      ; R1값을 초기화
 8095 74EF                 MOV     A,#11101111B ; 데이터 아웃의 초기값
 8097 D3                   SETB    C             
                
 8098 F8        COLSCAN:   MOV     R0,A         ; R0에 데이터 아웃 값 보관 
 8099 09                   INC     R1           ; R1 열의 값 보관
 809A 1280BB               CALL    SUBKEY       ; 키 패드 입력 상태 조사
                
 809D B4FF07               CJNE    A,#0FFH,RSCAN
 80A0                      ; 누산기의 값이 0FFH 가 아니면, 키 입력이 발생 
                                                 
 80A0 E8                   MOV     A,R0
 80A1 D3                   SETB    C
 80A2 13                   RRC     A            ; 다음 열로 이동
 80A3 50EE                 JNC     INITIAL      ; 모든 열을 스캔했으면,다시 시작
 80A5 80F1                 JMP     COLSCAN      ; 다음 열의 스캔을 위한 분기
                
 80A7 7A00      RSCAN:     MOV     R2,#00H      ; R2 행의 값 보관
 80A9 13        ROWSCAN:   RRC     A            ; 어느 행이 1 로 바뀌었는지 조사
 80AA 5003                 JNC     MATRIX       ; 캐리가 발생하면, MATRIX로 분기
 80AC 0A                   INC     R2           ; 캐리가 발생하지 않으면, 다음 행으로 이동
 80AD 80FA                 JMP     ROWSCAN      ; 다음 행의 스캔을 위한 분기
                
 80AF EA        MATRIX:    MOV     A,R2         ; R2에는 행의 값 보존
 80B0 75F005               MOV     B,#05H       ; 1행은 5열로 이루어짐
 80B3 A4                   MUL     AB           ; 2차원 배열을 1차원 배열로 값을 바꿈
 80B4 29                   ADD     A,R1         ; R1에는 열의 값 보존
 80B5 1280D7               CALL    INDEX        ; 키 코드 값을 지정
 80B8 D0D0                 POP     PSW          ; 스택으로 부터 PSW 값을 가지고 옴
 80BA 22                   RET                  ; 상위 루틴으로 복귀
                
                
 80BB           ;*****************************************************************
 80BB           ;*         서브 루틴 : SUBKEY                                    *
 80BB           ;*              입력 : ACC                                       *
 80BB           ;*              출력 : ACC                                       *
 80BB           ;*              기능 : 데이터 아웃으로 데이터를 내보내고         *
 80BB           ;*                     데이터 인으로 결과를 확인                 * 
 80BB           ;*****************************************************************
 80BB 90FFF0    SUBKEY:    MOV     DPTR,#DATAOUT
 80BE F0                   MOVX    @DPTR,A
 80BF 90FFF1               MOV     DPTR,#DATAIN
 80C2 E0                   MOVX    A,@DPTR
 80C3 22                   RET
                
 80C4           ;*****************************************************************
 80C4           ;*         서브 루틴 : DISPLAY                                   *
 80C4           ;*              입력 : ACC                                       *
 80C4           ;*              출력 : ACC                                       *
 80C4           ;*              기능 : 키 코드값을 7_SEGMENT 로 표시             *
 80C4           ;*****************************************************************
                
 80C4 90FFC1    DISPLAY:   MOV     DPTR,#DLED    ; 오른쪽 2개의 7_SEGMENT 지정
 80C7 E530                 MOV     A,VSEC        ; VSEC 값을 누산기로
 80C9 F0                   MOVX    @DPTR,A       ; VSEC 값의 표시
                
 80CA 90FFC2               MOV     DPTR,#ALED0   ; 중간 2개의 7_SEGMENT 지정
 80CD E531                 MOV     A,VMIN        ; VMIN 값을 누산기로
 80CF F0                   MOVX    @DPTR,A       ; VMIN 값의 표시
                
 80D0 90FFC3               MOV     DPTR,#ALED1   ; 오른쪽 2개의 7_SEGMENT 지정
 80D3 E532                 MOV     A,VHOUR       ; VHOUR 값을 누산기로
 80D5 F0                   MOVX    @DPTR,A       ; VHOUR 값의 표시
 80D6 22                   RET                   ; 상위 루틴으로 복귀             
                 
 80D7           ;*****************************************************************
 80D7           ;*         서브 루틴 : INDEX                                     *
 80D7           ;*              입력 : ACC                                       *
 80D7           ;*              출력 : ACC                                       *
 80D7           ;*              기능 : 키 코드값을 정의                          * 
 80D7           ;*****************************************************************
 80D7           ;DEFINE  FUNCTION KEY
 0010           RWKEY      EQU     10H ;READ AND WRITE KEY
 0011           INCKEY     EQU     11H ;INCRESE KEY(COMMA ,)
 0012           ENDKEY     EQU     12H ;END KEY (PERIOD . )
 0013           GO         EQU     13H ;GO-KEY
 0014           REG        EQU     14H ;REGISTER KEY
 0015           DECKEY     EQU     15H ;DECRESE KEY
 0016           CODE       EQU     16H ;CODE KEY
 0017           ST         EQU     17H ;SINGLE STEP KEY
 0018           RST        EQU     18H ;RST KEY
                
                
 80D7 83        INDEX:     MOVC    A,@A+PC ;누산기는 1 ~ 24의 값을 가진다.
 80D8 22                   RET
                
 80D9 17        KEYBASE:   DB ST         ;SW1,ST                 1
 80DA 16                   DB CODE       ;SW6,CODE               2
 80DB 15                   DB DECKEY     ;SW11,CD                3
 80DC 14                   DB REG        ;SW15,REG               4
 80DD 13                   DB GO         ;SW19,GO                5
 80DE 0C                   DB 0CH        ;SW2,C                  6
 80DF 0D                   DB 0DH        ;SW7,D                  7
 80E0 0E                   DB 0EH        ;SW12,E                 8
 80E1 0F                   DB 0FH        ;SW16,F                 9
 80E2 11                   DB INCKEY     ;SW20,COMMA (,)        10
 80E3 08                   DB 08H        ;SW3,8                 11
 80E4 09                   DB 09H        ;SW8,9                 12
 80E5 0A                   DB 0AH        ;SW13,A                13
 80E6 0B                   DB 0BH        ;SW17,B                14
 80E7 12                   DB ENDKEY     ;SW21,PERIOD(.)        15
 80E8 04                   DB 04H        ;SW4,4                 16
 80E9 05                   DB 05H        ;SW9,5                 17
 80EA 06                   DB 06H        ;SW14,6                18
 80EB 07                   DB 07H        ;SW18,7                19
 80EC 10                   DB RWKEY      ;SW22,R/W              20
 80ED 00                   DB 00H        ;SW5,0                 21
 80EE 01                   DB 01H        ;SW10,1                22
 80EF 02                   DB 02H        ;SW24,2                23
 80F0 03                   DB 03H        ;SW23,3                24
 80F1 18                   DB RST        ;SW24  RST KEY         25
                
 80F2           END


 PUSAN NATIONAL UNIVERSITY  8051 CROSS-ASSEMBLER        VERSION 1.20

                          Multiware & Image

 SOURCE FILE NAME: D:\WORK8051\8051실험\KEY실험\SHIFTKEY.ASM



